<UserControl
    x:Class="LcLauncher.Main.Rack.ShelfView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:LcLauncher.Main.Rack"
    xmlns:tile="clr-namespace:LcLauncher.Main.Rack.Tile"
    mc:Ignorable="d" 
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    d:DataContext="{d:DesignInstance local:ShelfViewModel, IsDesignTimeCreatable=False}"
    DataContextChanged="ShelfView_DataContextChanged"
    Background="#00000000"
    d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.ContextMenu>
        <ContextMenu>
            <!-- Mostly to prevent Column context menu from showing in gaps -->
            <MenuItem Header="{Binding MarkShelfText}"
                      Command="{Binding ToggleCutCommand}"
                      IsChecked="{Binding IsKeyShelf}">
                <MenuItem.Icon>
                    <iconPacks:PackIconMaterial Kind="MapMarkerOutline" Width="20" Height="20"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
    <StackPanel
        Orientation="Vertical">
        <!-- Shelf header -->
        <Grid>
            <DockPanel
                Background="{DynamicResource MahApps.Brushes.Accent}"
                Margin="2,4,2,0">
                <DockPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding MarkShelfText}"
                                  Command="{Binding ToggleCutCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Kind="{Binding MarkShelfActionIcon}"
                                    Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Insert Marked Shelf Here"
                                  Command="{Binding MoveMarkedShelfHereCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Kind="TrayArrowDown"
                                    Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Create New Shelf Here"
                                  Command="{Binding CreateNewShelfHereCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Kind="TrayPlus"
                                    Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Properties..."
                                  Command="{Binding EditShelfCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial Kind="Cog" Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Add Tile Row"
                                  Command="{Binding PrimaryTiles.AddEmptyRowCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial Kind="TableRowPlusAfter" Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Remove Empty Tile Row"
                                  Command="{Binding PrimaryTiles.RemoveLastEmptyRowCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial Kind="TableRowRemove" Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Other">
                            <MenuItem Header="Update Missing Icons"
                                      Command="{Binding EnqueueIconJobs}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial Kind="Reload" Width="20" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Reload All Icons"
                                      Command="{Binding RefreshIconJobs}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial Kind="ReloadAlert" Width="20" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="Danger Zone">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Kind="AlertOutline" Width="20" Height="20"
                                    Foreground="#FFFF4444"/>
                            </MenuItem.Icon>
                            <MenuItem
                                Header="Delete Shelf!"
                                Command="{Binding DeleteShelfCommand}">
                                <MenuItem.Icon>
                                    <iconPacks:PackIconMaterial Kind="TrayRemove" Width="20" Height="20"
                                                    Foreground="#FFFF4444"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </ContextMenu>
                </DockPanel.ContextMenu>
                <DockPanel.InputBindings>
                    <!--
                      Yes, you can handle a doubleclick on a dockpanel by a command :)
                      https://stackoverflow.com/a/6882619/271323
                    -->
                    <MouseBinding
                        Gesture="LeftDoubleClick"
                        Command="{Binding ToggleExpandedCommand}"/>
                </DockPanel.InputBindings>
                <TextBlock
                    DockPanel.Dock="Left"
                    Padding="10,5"
                    Text="{Binding Title}"
                    />
                <ToggleButton
                    DockPanel.Dock="Right"
                    IsChecked="{Binding IsExpanded}"
                    MinWidth="20" MinHeight="20"
                    BorderThickness="0"
                    Margin="0,0,2,0"
                    Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                    <iconPacks:PackIconMaterial
                        Kind="{Binding ShelfExpandedIcon}"
                        Height="16" Width="16"/>
                </ToggleButton>
                <Button
                    DockPanel.Dock="Right"
                    MinWidth="20" MinHeight="20"
                    BorderThickness="0"
                    Margin="0,0,8,0"
                    Command="{Binding EditShelfCommand}"
                    Style="{DynamicResource MahApps.Styles.Button.Circle}">
                    <iconPacks:PackIconMaterial
                        Kind="Cog"
                        Height="16" Width="16"/>
                </Button>
                <ToggleButton
                    DockPanel.Dock="Right"
                    IsChecked="{Binding IsKeyShelf}"
                    MinWidth="20" MinHeight="20"
                    BorderThickness="0"
                    Margin="0,0,8,0"
                    Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}">
                    <iconPacks:PackIconMaterial
                        Kind="{Binding MarkShelfIcon}"
                        Height="16" Width="16"/>
                </ToggleButton>
                <Grid/>
                <!-- Spacer -->
            </DockPanel>
            <!-- Indicate this is the key shelf, but stay responsive -->
            <Border
                Visibility="{Binding IsKeyShelf, Converter={StaticResource VisibleIf}}"
                Background="#88444444"
                IsHitTestVisible="False"/>
        </Grid>
        <!-- Content (both Primary and, if present, secondary) -->
        <Grid>
            <StackPanel
                Orientation="Vertical"
                Visibility="{Binding IsExpanded, Converter={StaticResource VisibleIf}}"
                MinHeight="42">
                <tile:TileListView
                    DataContext="{Binding PrimaryTiles}"/>
                <tile:TileListView
                    Visibility="{Binding
                        DataContext.SecondaryTiles,
                        RelativeSource={RelativeSource AncestorType=UserControl},
                        Converter={StaticResource VisibleIfNotNull}}"
                    DataContext="{Binding SecondaryTiles}"/>
            </StackPanel>
            <!-- Indicate this is the key shelf, and block mouse interaction -->
            <Border
                Visibility="{Binding IsKeyShelf, Converter={StaticResource VisibleIf}}"
                Background="#88CCCCCC"
                BorderThickness="5"
                Margin="2,0"
                BorderBrush="{DynamicResource MahApps.Brushes.AccentBase}"
                IsHitTestVisible="True">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{Binding MarkShelfText}"
                                  Command="{Binding ToggleCutCommand}">
                            <MenuItem.Icon>
                                <iconPacks:PackIconMaterial Kind="MapMarkerOff" Width="20" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Border.ContextMenu>
            </Border>
        </Grid>
    </StackPanel>
</UserControl>
