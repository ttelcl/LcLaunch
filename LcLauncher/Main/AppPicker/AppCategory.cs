/*
 * (c) 2025  ttelcl / ttelcl
 */

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LcLauncher.Main.AppPicker;

public class AppCategory
{
  private AppCategory(
    string key,
    string description,
    TileKind defaultTileKind)
  {
    Key = key;
    Description = description;
    DefaultTileKind = defaultTileKind;
  }

  public string Key { get; }

  public string Description { get; }

  /// <summary>
  /// The default tile kind for this category. Other kinds
  /// may be supported too.
  /// </summary>
  public TileKind DefaultTileKind { get; }

  public bool Filter(object appViewModel)
  {
    return (appViewModel is AppViewModel avm) && avm.Category == this;
  }

  public static bool NonFilter(object appViewModel)
  {
    return true;
  }

  public static AppCategory ModernApp { get; } = new(
    "Modern App",
    "Applications installed from the Windows App Store.",
    TileKind.ModernAppTile);

  public static AppCategory ExecutableApp { get; } = new(
    "Executable File",
    "These apps provide maximum configurable tiles. You can configure program arguments " +
    "for your tile and configure their environment variables.",
    TileKind.ExecutableTile);

  public static AppCategory ClassicApp { get; } = new(
    "Classic App",
    "Applications developed using technologies that do not depend on the Windows App Store.",
    TileKind.ModernAppTile);

  public static AppCategory DocumentApp { get; } = new(
    "Document",
    "These are files that are not executables but documents. Depending on the " +
    "file type special launch options may be available (look for 'verb' in the "+
    "tile configuration)",
    TileKind.DocumentTile);

  public static AppCategory ProtocolApp { get; } = new(
    "URL / URI",
    "This category includes both web shortcuts as well as custom protocol based apps. " +
    "This category is popular for modern cross-platform apps.",
    TileKind.UriTile);

  public static AppCategory FolderApp { get; } = new(
    "Folder",
    "These uncommon 'apps' are just a folder (opening by default in Explorer)",
    TileKind.DocumentTile);

  public static AppCategory ShortcutApp { get; } = new(
    "Magic Shortcuts",
    "These apps are generated by Windows, usually based on a shortcut somewhere on " +
    "your computer. " +
    "Consider tracking down the shortcut file and binding to it directly instead",
    TileKind.ModernAppTile);

  public static AppCategory OtherApp { get; } = new(
    "Other",
    "Anything else found in your computer's application list. " +
    "This may also include applications that were deleted but not correctly uninstalled.",
    TileKind.ModernAppTile);

  public static IReadOnlyList<AppCategory> AppCategoryList { get; } =
    new List<AppCategory>() {
      ModernApp,
      ExecutableApp,
      ClassicApp,
      DocumentApp,
      ProtocolApp,
      FolderApp,
      ShortcutApp,
      OtherApp
    };

  public static IReadOnlyDictionary<string, AppCategory> AppCategoryMap { get; }
    = AppCategoryList.ToDictionary(ac => ac.Key);
}
